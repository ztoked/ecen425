Zach Halvorsen
ECEn 425
HW 8

1- The first problem that we were able to find was that the char is a local variable and passing the address will not work because it will end up getting popped off of the stack. It would be better if it were a global variable (assuming that messages are processed faster than keys are pressed). A second solution could be to use an array that keeps track of all of the buttons pushed. We would probably need a processed index and a not processed index to keep track of what still needs to be received.

2- 

/* Handle for the trigger group of events. */
semaphore triggerSem;

void main (void)
{
    .
    .
    .
    /* Create an event group with 
       the trigger and keyboard events reset */
    SemCreate( triggerSem, 1 );
    .
    .
    .
}

void interrupt vTriggerISR (void)
{
    /* The user pulled the trigger. Set the event. */
    sempost( triggerSem );
}

void vScanTask (void)
{
    .
    .
    .
    while (TRUE)
    {
        /* Wait for the user to pull the trigger. */
        SemPend( triggerSem );

        !! Turn on the scanner hardware and look for a scan.
    }
}

3-

/* Handle for the trigger group of events. */
semaphore scanSem;
semaphore radioSem;

void main (void)
{
    .
    .
    .
    /* Create an event group with
       the trigger and keyboard events reset */
    SemCreate(scanSem, 1);
	SemCreate(radioSem, 1);
    .
    .
    .
}

void interrupt vTriggerISR (void)
{
    /* The user pulled the trigger. Set the event. */
    SemPost(scanSem);
	SemPost(radioSem);
}

void interrupt vKeyISR (void)
{
    /* The user pressed a key. Set the event. */
    SemPost(radioSem);

    !! Figure out which key the user pressed and store that value
}

void vScanTask (void)
{
    .
    .
    .
    while (TRUE)
    {
        /* Wait for the user to pull the trigger. */
        SemPend(scanSem);

        !! Turn on the scanner hardware and look for a scan.
        .
        .
        .
        !! When the scan has been found, turn off the scanner.
    }
}

void vRadioTask (void)
{
    .
    .
    .
    while (TRUE)
    {
        /* Wait for the user to pull the trigger or press a key. */
        SemPend(radioSem);

        !! Turn on the radio.
        .
        .
        .
        !! When data has been sent, turn off the radio.
    }
}


