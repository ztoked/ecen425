; Generated by c86 (BYU-NASM) 5.1 (beta) from 3A.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
gvar:
	DW	0
	ALIGN	2
main:
	; >>>>> Line:	8
	; >>>>> { 
	jmp	L_3A_1
L_3A_2:
	; >>>>> Line:	9
	; >>>>> switch (gvar) { 
	mov	si, word [gvar]
	cmp	si, 7
	ja	L_3A_4
	shl	si, 1
	jmp	word [si+L_3A_5]
L_3A_6:
	; >>>>> Line:	11
	; >>>>> gvar += 5; 
	add	word [gvar], 5
	; >>>>> Line:	12
	; >>>>> gvar *= 5; 
	mov	ax, 5
	imul	word [gvar]
	mov	word [gvar], ax
	; >>>>> Line:	13
	; >>>>> break; 
	jmp	L_3A_3
L_3A_7:
	; >>>>> Line:	15
	; >>>>> gvar *= 5; 
	mov	ax, 5
	imul	word [gvar]
	mov	word [gvar], ax
	; >>>>> Line:	16
	; >>>>> gvar -= 5; 
	sub	word [gvar], 5
	; >>>>> Line:	17
	; >>>>> break; 
	jmp	L_3A_3
L_3A_8:
	; >>>>> Line:	19
	; >>>>> gvar *= 5; 
	mov	ax, 5
	imul	word [gvar]
	mov	word [gvar], ax
	; >>>>> Line:	20
	; >>>>> gvar /= 2; 
	mov	ax, word [gvar]
	cwd
	mov	cx, 2
	idiv	cx
	mov	word [(gvar+0)], ax
	; >>>>> Line:	21
	; >>>>> break; 
	jmp	L_3A_3
L_3A_9:
	; >>>>> Line:	23
	; >>>>> gvar -= 1; 
	dec	word [gvar]
	; >>>>> Line:	24
	; >>>>> gvar /= 2; 
	mov	ax, word [gvar]
	cwd
	mov	cx, 2
	idiv	cx
	mov	word [(gvar+0)], ax
	; >>>>> Line:	25
	; >>>>> break; 
	jmp	L_3A_3
L_3A_10:
	; >>>>> Line:	27
	; >>>>> gvar *= 7; 
	mov	ax, 7
	imul	word [gvar]
	mov	word [gvar], ax
	; >>>>> Line:	28
	; >>>>> gvar -= 9; 
	sub	word [gvar], 9
	; >>>>> Line:	29
	; >>>>> break; 
	jmp	L_3A_3
L_3A_11:
	; >>>>> Line:	31
	; >>>>> gvar -= 2; 
	sub	word [gvar], 2
	; >>>>> Line:	32
	; >>>>> gvar /= 3; 
	mov	ax, word [gvar]
	cwd
	mov	cx, 3
	idiv	cx
	mov	word [(gvar+0)], ax
	; >>>>> Line:	33
	; >>>>> break; 
	jmp	L_3A_3
L_3A_12:
	; >>>>> Line:	35
	; >>>>> gvar += 3; 
	add	word [gvar], 3
	; >>>>> Line:	36
	; >>>>> gvar /= 9; 
	mov	ax, word [gvar]
	cwd
	mov	cx, 9
	idiv	cx
	mov	word [(gvar+0)], ax
	; >>>>> Line:	37
	; >>>>> break; 
	jmp	L_3A_3
L_3A_13:
	; >>>>> Line:	39
	; >>>>> gvar *= gvar; 
	mov	ax, word [gvar]
	imul	word [gvar]
	mov	word [gvar], ax
	; >>>>> Line:	40
	; >>>>> gvar /= 7; 
	mov	ax, word [gvar]
	cwd
	mov	cx, 7
	idiv	cx
	mov	word [(gvar+0)], ax
	; >>>>> Line:	41
	; >>>>> break; 
	jmp	L_3A_3
L_3A_4:
	; >>>>> Line:	43
	; >>>>> gvar = 0; 
	mov	word [gvar], 0
L_3A_3:
	; >>>>> Line:	44
	; >>>>> break; 
	mov	sp, bp
	pop	bp
	ret
L_3A_1:
	push	bp
	mov	bp, sp
	jmp	L_3A_2
	ALIGN	2
L_3A_5:
	DW	L_3A_6,L_3A_7,L_3A_8,L_3A_9,L_3A_10
	DW	L_3A_11,L_3A_12,L_3A_13
